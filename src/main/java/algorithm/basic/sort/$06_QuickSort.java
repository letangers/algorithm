package algorithm.basic.sort;

/**
 * 快速排序算法
 * <p>
 * 快排也是基于分治的思想，每次排序首先选取一个基准值k，然后遍历数组将之分为左右两部分，其中左半部分的元素统统小于基准值k，
 * 而右半部分的元素统统大于基准值k，这样整个数组就分为了一大一小两部分，但是两部分各自内部不保证有序。
 * 基于上述的处理方式，只需要在子数组中选取基准值，重复一分为二的操作，直到分到最小的单位即可完成排序。
 * <p>
 * <p>
 * 实现：
 * 1. 非递归方式：
 * 对每个子序列维护左右两个指针，在遍历过程中比较左右指针元素的大小，使得较小的元素移动到左侧，较大的元素移动到右侧，
 * 两指针共同向中间位置靠拢
 * 2. 递归方式：
 */
public class $06_QuickSort {

    /**
     * 快排算法 - 非递归方式
     *
     * @param arr
     */
    public static void quickSortWithLoop(int[] arr) {

    }
}
